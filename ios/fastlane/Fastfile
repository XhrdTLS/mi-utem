def ensure_keychain()
  delete_keychain(
    name: ENV["KEYCHAIN_NAME"]
  ) if File.exist? File.expand_path("~/Library/Keychains/#{ENV["KEYCHAIN_NAME"]}-db")
  create_keychain(
    name: ENV["KEYCHAIN_NAME"],
    password: ENV["KEYCHAIN_PASSWORD"],
    unlock: true,
    timeout: 0,
  )
end

lane :ios_test do
  puts("Testing Fastlane from iOS")
end

lane :ios_flutter do |options|
  build_number = options[:build_number]
  build_name = options[:build_name]
  skip_clean = options[:skip_clean]
  skip_cocoapods = options[:skip_cocoapods]

  Dir.chdir ".." do
    sh("shorebird", "release", "ios-alpha",  "--flavor", "prod", "--export-options-plist ios/exportOptions.plist", "--force", "--", "--no-tree-shake-icons")
  end
end

lane :ios_build_and_upload do |options|
  build_number = options[:build_number]
  build_name = options[:build_name]
  skip_clean = options[:skip_clean]
  type = options[:type]
  changelog = options[:changelog]
  skip_cocoapods = options[:skip_cocoapods]
  is_ci = options[:is_ci]
  skip_match = false


  unless skip_match
    if is_ci
      ensure_keychain()
      unlock_keychain(
        path: ENV["KEYCHAIN_NAME"],
        password: ENV["KEYCHAIN_PASSWORD"],
        set_default: is_ci
      )

      match(
        app_identifier: [ENV["APP_IDENTIFIER_IOS"], ENV["APP_IDENTIFIER_IOS"] + ".MiUtemNotificationServiceExtension"],
        type: "appstore",
        git_url: ENV["MATCH_REPO_GIT_URL"],
        readonly: is_ci,
        keychain_name: ENV["KEYCHAIN_NAME"],
        keychain_password: ENV["KEYCHAIN_PASSWORD"],
      )
    else
      match(
        app_identifier: [ENV["APP_IDENTIFIER_IOS"], ENV["APP_IDENTIFIER_IOS"] + ".MiUtemNotificationServiceExtension"],
        type: "appstore",
        git_url: ENV["MATCH_REPO_GIT_URL"],
        readonly: is_ci,
      )
      
      
    end
  end


  
  if type == "beta"
    ios_beta_upload(options)
  elsif type == "release"
    ios_beta_upload(options)
  end
  
end

lane :ios_beta_upload do |options|
  changelog = options[:changelog]
  is_ci = options[:is_ci]

  upload_to_testflight(
    ipa: "build/ios/ipa/Mi UTEM.ipa",
    changelog: changelog,
    skip_waiting_for_build_processing: is_ci
  )
end

lane :ios_release_upload do |options|
  changelog = options[:changelog]

  upload_to_app_store(
    ipa: "build/ios/ipa/Mi UTEM.ipa",
    release_notes: changelog
  )
end
